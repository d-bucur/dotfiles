{
    // BEVY
    "Bevy Query Param": {
        "prefix": "query bevy",
        "body": "${1:query}: Query<${0}>",
    },
    "Bevy Mutable Query Param": {
        "prefix": "query mut bevy",
        "body": "mut ${1:query}: Query<${0}>",
    },
    "Bevy Commands Param": {
        "prefix": "commands bevy",
        "body": "mut ${0:commands}: Commands",
    },
    "Bevy Res Param": {
        "prefix": "res bevy",
        "body": "${1:res}: Res<${0}>",
    },
    "Bevy ResMut Param": {
        "prefix": "res mut bevy",
        "body": "mut ${1:res}: ResMut<${0}>",
    },
    "Bevy EventWriter Param": {
        "prefix": "event writer bevy",
        "body": "mut ${1:events}: EventWriter<${0}>",
    },
    "Bevy EventReader Param": {
        "prefix": "event reader bevy",
        "body": "mut ${1:events}: EventReader<${0}>",
    },
    "Bevy Local Param": {
        "prefix": "local bevy",
        "body": "mut ${1:local}: Local<${0}>",
    },
    "Bevy App Template": {
        "prefix": "app bevy",
        "body": [
            "use bevy::prelude::*;",
            "",
            "fn main() {",
            "   App::new()",
            "       .add_plugins(DefaultPlugins)${0}",
            "       .run();",
            "}",
        ]
    },
    "Bevy Plugin Template": {
        "prefix": "plugin bevy",
        "body": [
            "pub struct ${1};",
            "",
            "impl Plugin for ${1} {",
            "\tfn build(&self, app: &mut App) {",
            "\t\t${2}",
            "\t}",
            "}",
        ]
    },
    "Bevy Component Struct": {
        "prefix": "component bevy",
        "body": [
            "#[derive(${1:Component})]",
            "struct ${2}",
        ],
    },
    "Bevy SystemSet": {
        "prefix": "system set bevy",
        "body": [
            "#[derive(SystemSet, Debug, Hash, Clone, PartialEq, Eq)]",
            "pub enum ${1} {",
            "    ${2}",
            "}",
        ],
    },
    "Bevy Schedule Label": {
        "prefix": "schedule label bevy",
        "body": [
            "#[derive(ScheduleLabel, Debug, Hash, PartialEq, Eq, Clone)]",
            "struct ${0}",
        ],
    },

    // RUST
    "Derive": {
        "prefix": "derive",
        "body": "#[derive(${0})]",
    },
    "Feature": {
        "prefix": "feature",
        "body": "#[cfg(feature = \"${1}\")]"
    },
    "Test": {
        "prefix": "test",
        "body": [
            "#[cfg(test)]",
            "mod tests {",
            "    #[test]",
            "    fn ${1}() {",
            "        ${2}",
            "    }",
            "}",
        ],
    },
    "Derivative Struct": {
        "prefix": "derivative struct",
        "body": [
            "#[derive(Derivative)]",
            "#[derivative(Default)]",
        ],
    },
    "Derivative Default": {
        "prefix": "derivative default value",
        "body": [
            "#[derivative(Default(value=\"${1}\"))]",
        ],
    },
}